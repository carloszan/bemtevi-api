name: 'ci-release'

on:
  push:
    tags:
    - 'v*'

jobs:
  test:
    runs-on: ubuntu-latest
    container: node:22.19.0
    steps:
      - uses: actions/checkout@v4
        with:
          fetch-depth: 0 # Required for GitVersion to work properly
      - run: npm install
      - run: npm run test:cov
  
  version:
    runs-on: ubuntu-latest
    needs: test
    outputs:
      semver: ${{ steps.gitversion.outputs.semVer }}
      full_semver: ${{ steps.gitversion.outputs.fullSemVer }}
      major: ${{ steps.gitversion.outputs.major }}
      minor: ${{ steps.gitversion.outputs.minor }}
      patch: ${{ steps.gitversion.outputs.patch }}
    steps:
      - name: Checkout
        uses: actions/checkout@v4
        with:
          fetch-depth: 0 # Required for GitVersion to work properly

      - name: Install GitVersion
        uses: gittools/actions/gitversion/setup@v4.1.0
        with:
          versionSpec: '6.3.x'

      - name: Determine Version
        id: gitversion
        uses: gittools/actions/gitversion/execute@v4.1.0

      - name: Display GitVersion outputs
        run: |
          echo "SemVer: ${{ steps.gitversion.outputs.semVer }}"
          echo "FullSemVer: ${{ steps.gitversion.outputs.fullSemVer }}"
          echo "Major: ${{ steps.gitversion.outputs.major }}"
          echo "Minor: ${{ steps.gitversion.outputs.minor }}"
          echo "Patch: ${{ steps.gitversion.outputs.patch }}"

  docker:
    runs-on: ubuntu-latest
    needs: version
    steps:
      - name: Checkout
        uses: actions/checkout@v4
        with:
          fetch-depth: 0

      - name: Prepare
        id: prep
        run: |
          DOCKER_IMAGE=${{ secrets.DOCKER_USERNAME }}/${GITHUB_REPOSITORY#*/}
          VERSION=${{ needs.version.outputs.semver }}
          
          # Create tags array
          TAGS="${DOCKER_IMAGE}:${VERSION}"
          TAGS="$TAGS,${DOCKER_IMAGE}:latest"
          
          # Also tag with major and major.minor for easier version referencing
          TAGS="$TAGS,${DOCKER_IMAGE}:${{ needs.version.outputs.major }}"
          TAGS="$TAGS,${DOCKER_IMAGE}:${{ needs.version.outputs.major }}.${{ needs.version.outputs.minor }}"
          
          # Set output parameters
          echo "tags=${TAGS}" >> $GITHUB_OUTPUT
          echo "docker_image=${DOCKER_IMAGE}" >> $GITHUB_OUTPUT
          echo "version=${VERSION}" >> $GITHUB_OUTPUT

      - name: Set up QEMU
        uses: docker/setup-qemu-action@v3
        with:
          platforms: all

      - name: Set up Docker Buildx
        id: buildx
        uses: docker/setup-buildx-action@v3

      - name: Login to DockerHub
        uses: docker/login-action@v3
        with:
          username: ${{ secrets.DOCKER_USERNAME }}
          password: ${{ secrets.DOCKER_PASSWORD }}

      - name: Build and Push
        uses: docker/build-push-action@v5
        with:
          builder: ${{ steps.buildx.outputs.name }}
          context: .
          file: ./Dockerfile
          platforms: linux/amd64,linux/arm64
          push: true
          tags: ${{ steps.prep.outputs.tags }}
          labels: |
            org.opencontainers.image.version=${{ steps.prep.outputs.version }}
            org.opencontainers.image.source=${{ github.repositoryUrl }}

      - name: Display built tags
        run: |
          echo "Built and pushed the following tags:"
          echo "${{ steps.prep.outputs.tags }}" | tr ',' '\n'